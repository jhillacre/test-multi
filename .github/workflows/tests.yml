# https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Tests

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  test:
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    container:
      image: arrai/ubuntu:focal
      env:
        LANG: en_US.UTF-8
        AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache
      options: --network-alias testHost
#    strategy:
#      matrix:
#        python-version: [3.6, 3.8]
#      fail-fast: false
    env:
      python-version: 3.6
    steps:
      - name: Make container toolcache available in expected location
        run: |
          ln -s /__t /opt/hostedtoolcache
      - name: Get Repo Name
        id: repoName
        run: echo "::set-output name=repoName::${GITHUB_REPOSITORY##*/}"
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Setup dirs
        run: chown -R root:root ~
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          python -m pip install --upgrade pip
          echo "::set-output name=dir::$(python -m pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-${{ env.python-version }}-pip-tests-${{ hashFiles('./requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.python-version }}-pip-tests
            ${{ runner.os }}-${{ env.python-version }}-pip
      - name: venv cache
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: ~/.venv/
          key: ${{ runner.os }}-${{ env.python-version }}-venv-tests-${{ hashFiles('./requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.python-version }}-venv-tests
            ${{ runner.os }}-${{ env.python-version }}-venv
      - name: Set up Python environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv "${HOME}/.venv"
      - name: Install Python requirements
        if: steps.cache-venv.outputs.cache-hit != 'true'
        env:
          PIP_EXTRA_INDEX_URL: ${{ secrets.PIP_EXTRA_INDEX_URL }}
        run: |
          source "${HOME}/.venv/bin/activate"
          pip install --upgrade pip wheel setuptools coverage
          pip install -r "./requirements.txt" | cat; test ${PIPESTATUS[0]} -eq 0
      - name: Run test suite
        id: test-suite
        run: |
          source "${HOME}/.venv/bin/activate"
          export COVERAGE_PROCESS_START=.coveragerc
          echo "import coverage; coverage.process_startup()" > `python -c "import sys; print([x for x in sys.path if x.find('${HOME}/.venv') != -1 and x.find('site-packages') != -1][0] + '/coverage-all-the-things.pth')"`
          coverage run -p main.py
      - name: Show coverage
        run: |
          source "${HOME}/.venv/bin/activate"
          coverage combine
          coverage report -m
